[gd_scene load_steps=5 format=3 uid="uid://b1xw6yds6qt8w"]

[sub_resource type="GDScript" id="GDScript_61c57"]
script/source = "extends CanvasLayer

func _ready():
	$ColorRect.size = Initialization.screen_size
	Initialization.transition = self

func transition_end():
	$AnimationPlayer.play(\"End\")
	
var path_to_scene : String
func transition_start(path):
	path_to_scene = path
	self.visible = true
	$AnimationPlayer.play(\"Start\")
	
func _on_animation_player_animation_finished(anim_name):
	if anim_name==\"End\":
		self.visible = false
	elif path_to_scene==\"res://scene.tscn\":
		var parent := get_parent()
		var game_ui := preload(\"res://game_ui.tscn\").instantiate()
		var scene := preload(\"res://scene.tscn\").instantiate()
		parent.add_child(scene)
		parent.add_child(game_ui)
	else: 
		var parent := get_parent()
		var scene := preload(\"\").instantiate()
		parent.add_child(scene)
"

[sub_resource type="Animation" id="Animation_4gbp0"]
resource_name = "Start"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("ColorRect:self_modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 1),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(1, 1, 1, 0), Color(0, 0, 0, 1)]
}

[sub_resource type="Animation" id="Animation_485dw"]
resource_name = "End"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("ColorRect:self_modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0.5, 1),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(0, 0, 0, 1), Color(1, 1, 1, 0)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_vnabv"]
_data = {
"End": SubResource("Animation_485dw"),
"Start": SubResource("Animation_4gbp0")
}

[node name="Transition" type="CanvasLayer"]
visible = false
script = SubResource("GDScript_61c57")

[node name="ColorRect" type="ColorRect" parent="."]
self_modulate = Color(1, 1, 1, 0)
offset_right = 40.0
offset_bottom = 40.0

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_vnabv")
}

[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_animation_player_animation_finished"]
